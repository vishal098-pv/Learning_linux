git init (inside the directory run it to make it a repo use it wisely)
rm -rf .git (removing the Git version control from the directory)
git add  (add the file to staging)
git rm -cached (to unstage)
git commit -m "message" nameoffile (to commint the file)
git status (to check status)
git log (to see how many commits have been done so far)
man git (to see all git commands)
git rm (to delete file from git not from local)
git restore (restore the deleted file)
git config --global user.name "Your Name"
git config --global user.email "Your email"
git checkout -b ajay (it will create new branch and switch to the new branch)
git checkout Name_of_branch  (to switch to new branch)
git log --oneline
git merge dev (head will point to master and dev both if we run git log --oneline but if it is not merged it will point to dev branch if the change is done in dev and if change is in master it will point master)
git remote add origin ..linkof repo
git remote -v
git fetch (all branches will be fetched)
git branch (list branch)
git pull (only a single branch is pulled)


     #to connect using ssh
generate personal token through setting >developer setting>
git remote -v   =>copy url
git remote set-url origin https:// ----paste the token generated not url +@url starting from github copied in step 25 paste it
git push origin master
git pull origin master (will pull only master)
git fetch (will pull every branch)



git rebase (merge will not show commits of dev branch to master but rebase will)

see this image  - https://miro.medium.com/v2/resize:fit:1400/1*pFWenykuQ0rwXkbAx5nD_A.png

git revert __id of commit (git log --oneline for id)
# important
git reset --soft id ( below the commit you want to remove everything will be removed and no one can now what you did but the files will be present in woking tree so this is the basic difference between revert and reset

git reset --hard id (files from tree will also be removed 
conclusion every thing will be removed from the id data till id will remain only
#####now to restore that file from staged to unstaged 
git restore --staged keys.txt (git advance train with shubham 2:46:17)
vim .gitignore (put anme of file you want to ignore in this file and they will be removed from git but not from local)
git add .(search and then use )

git show commit __id

# advance topic cherrypick
git cherrypick __id of commit (it will add a change from dev branch to main branch not whole code only one commit that we want)

#stash if im working on feature in devbranch and suddenly want to switch to other branch but it will re move my changes so i will stast it
git stash (in that branch)
git stash pop (get your changes)

# pull /push / fetch


git clean












